{"stream_name": "driver_data", "version": 0, "stream_token": "abc123", "timestamp": null, "measures": {"location": {"val": null, "dtype": "varchar(60)"}}, "fields": {"region-code": {}}, "user_ids": {"driver-id": {}, "id": {}}, "tags": {}, "foreign_keys": [], "filters": [{"partition_list": [], "measure_list": ["timestamp"], "transform_type": "filter_data", "transform_name": "ButterLowpass", "param_dict": {"order": 2, "nyquist": 0.01, "filter_name": "_buttery"}, "logical_comparison": "AND"}, {"partition_list": [], "measure_list": ["timestamp"], "transform_type": "filter_data", "transform_name": "WindowAverage", "param_dict": {"window_len": 3, "filter_name": "_winning"}, "logical_comparison": "AND"}], "dparam_rules": [{"partition_list": [["timestamp", 1510603551106, ">"], ["timestamp", 1510603551391, "<"]], "measure_list": ["timestamp", "timestamp_winning"], "transform_type": "derive_param", "transform_name": "DeriveSlope", "param_dict": {"func_params": {"window_len": 1}, "measure_rules": {"rise_measure": "timestamp_winning", "run_measure": "timestamp", "output_name": "time_slope"}}, "logical_comparison": "AND"}, {"partition_list": [], "measure_list": ["timestamp"], "transform_type": "derive_param", "transform_name": "DeriveChange", "param_dict": {"func_params": {"window_len": 1, "angle_change": false}, "measure_rules": {"target_measure": "timestamp", "output_name": "time_change"}}, "logical_comparison": "AND"}, {"partition_list": [], "measure_list": ["timestamp"], "transform_type": "derive_param", "transform_name": "DeriveCumsum", "param_dict": {"func_params": {"offset": 0}, "measure_rules": {"target_measure": "timestamp", "output_name": "time_sum"}}, "logical_comparison": "AND"}, {"partition_list": [], "measure_list": ["timestamp"], "transform_type": "derive_param", "transform_name": "DeriveWindowSum", "param_dict": {"func_params": {"window_len": 3}, "measure_rules": {"target_measure": "timestamp", "output_name": "time_window_sum"}}, "logical_comparison": "AND"}, {"partition_list": [], "measure_list": ["timestamp"], "transform_type": "derive_param", "transform_name": "DeriveScaled", "param_dict": {"func_params": {"scalar": -1}, "measure_rules": {"target_measure": "timestamp", "output_name": "negatime"}}, "logical_comparison": "AND"}, {"partition_list": [], "measure_list": ["location"], "transform_type": "derive_param", "transform_name": "DeriveDistance", "param_dict": {"func_params": {"window_len": 1, "distance_func": "euclidean", "swap_lon_lat": true}, "measure_rules": {"spatial_measure": "location", "output_name": "dist1"}}, "logical_comparison": "AND"}, {"partition_list": [], "measure_list": ["location"], "transform_type": "derive_param", "transform_name": "DeriveDistance", "param_dict": {"func_params": {"window_len": 1, "distance_func": "great_circle", "swap_lon_lat": true}, "measure_rules": {"spatial_measure": "location", "output_name": "dist2"}}, "logical_comparison": "AND"}, {"partition_list": [], "measure_list": ["location"], "transform_type": "derive_param", "transform_name": "DeriveHeading", "param_dict": {"func_params": {"window_len": 1, "units": "deg", "heading_type": "bearing", "swap_lon_lat": true}, "measure_rules": {"spatial_measure": "location", "output_name": "head1"}}, "logical_comparison": "AND"}, {"partition_list": [], "measure_list": ["location"], "transform_type": "derive_param", "transform_name": "DeriveHeading", "param_dict": {"func_params": {"window_len": 1, "units": "deg", "heading_type": "flat_angle", "swap_lon_lat": true}, "measure_rules": {"spatial_measure": "location", "output_name": "head2"}}, "logical_comparison": "AND"}, {"partition_list": [], "measure_list": ["location"], "transform_type": "derive_param", "transform_name": "DeriveInBox", "param_dict": {"func_params": {"upper_left_corner": [-122.6835826856399, 45.515814287782455], "lower_right_corner": [-122.678529, 45.511597]}, "measure_rules": {"spatial_measure": "location", "output_name": "boxy"}}, "logical_comparison": "AND"}], "event_rules": {"test_event": {"partition_list": [], "measure_list": ["timestamp", "head1"], "transform_type": "detect_event", "transform_name": "DetectThreshold", "param_dict": {"event_rules": {"measure": "head1", "threshold_value": 69.2, "comparison_operator": ">=", "absolute_compare": true}, "event_name": "nice_event", "stream_id": "abc123"}, "logical_comparison": "AND"}}, "storage_rules": {"store_raw": true, "store_filtered": true, "store_derived": true}, "engine_rules": {"kafka": "test"}}

